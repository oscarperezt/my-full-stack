name: Playwright Tests

on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - synchronize
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: 'false'

jobs:

  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
      with:
        limit-access-to-actor: true
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      working-directory: frontend
    - name: Modify /etc/hosts
      run: |
        echo "127.0.0.1 mailcather" | sudo tee -a /etc/hosts
        echo "127.0.0.1 frontend" | sudo tee -a /etc/hosts
    - name: Create .env file from GitHub Secrets
      run: |
        echo "DOMAIN=localhost" > .env
        echo "BACKEND_CORS_ORIGINS=${{ secrets.BACKEND_CORS_ORIGINS }}" >> .env
        echo "FRONTEND_HOST=http://localhost:5888" >> .env
        echo "ENVIRONMENT=local" >> .env
        echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> .env
        echo "STACK_NAME=${{ secrets.STACK_NAME_STAGING }}" >> .env
        echo "SECRET_KEY=chagethis" >> .env
        echo "FIRST_SUPERUSER=admin@example.com" >> .env
        echo "FIRST_SUPERUSER_PASSWORD=changethis" >> .env
        echo "SMTP_HOST=" >> .env
        echo "SMTP_USER=" >> .env
        echo "SMTP_PASSWORD=" >> .env
        echo "EMAILS_FROM_EMAIL=info@example.com" >> .env
        echo "SMTP_TLS=True" >> .env
        echo "SMTP_SSL=False" >> .env
        echo "SMTP_PORT=587" >> .env
        echo "TIMESCALE_SERVER=${{ secrets.TIMESCALE_SERVER }}" >> .env
        echo "TIMESCALE_PORT=${{ secrets.TIMESCALE_PORT }}" >> .env
        echo "TIMESCALE_DB=${{ secrets.TIMESCALE_DB }}" >> .env
        echo "TIMESCALE_USER=${{ secrets.TIMESCALE_USER }}" >> .env
        echo "TIMESCALE_PASSWORD=${{ secrets.TIMESCALE_PASSWORD }}" >> .env
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
        echo "DOCKER_IMAGE_BACKEND=${{ secrets.DOCKER_IMAGE_BACKEND }}" >> .env
        echo "DOCKER_IMAGE_FRONTEND=${{ secrets.DOCKER_IMAGE_FRONTEND }}" >> .env
    - run: docker compose build
    - run: docker compose down -v --remove-orphans
    - run: docker compose up -d --wait backend mailcatcher
    - name: Run Playwright tests
      run: npx playwright test --fail-on-flaky-tests --trace=retain-on-failure
      working-directory: frontend
    - run: docker compose down -v --remove-orphans
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
        include-hidden-files: true

  # https://github.com/marketplace/actions/alls-green#why
  e2e-alls-green:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
